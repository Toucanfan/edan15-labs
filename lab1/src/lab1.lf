
target C {
     timeout: 3 sec
}

reactor StringLength {
    input in: string
    input in2: int
    output out: int
    output out2: int
    state accum_len: int = 0
    reaction(in) -> out {=
        #include <string.h>
        int len = strlen(in->value);
        lf_set(out, len);
        self->accum_len += len;
    =}
    reaction(in2) -> out2 {=
        lf_set(out2, in2->value);
    =}
    reaction(shutdown) {=
        printf("StringLength: Total accumulated length: %d\n", self->accum_len);
    =}
}

reactor Source {
    output out: string
    timer tim(0, 1 sec)
    reaction(tim) -> out {=
        lf_set(out, "Yo!");
    =}
}

reactor Sink {
    input in: int
    reaction(in) {=
        printf("Sink: Got input: %d\n", in->value);
    =}
}

main reactor {
    reaction(startup) {=
        printf("Hello world!\n");
    =}
    reaction(shutdown) {=
        printf("Good bye!\n");
    =}
    src = new Source()
    slen = new StringLength()
    snk = new Sink()
    src.out -> slen.in
    slen.out -> snk.in
    slen.out2 -> slen.in2 after 0 sec;
}
